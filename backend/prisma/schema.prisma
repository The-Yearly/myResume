generator client {
  provider      = "prisma-client-js"
  output        = "app/generated/prisma/client"
  binaryTargets = ["native", "debian-openssl-3.0.x", "rhel-openssl-3.0.x", "linux-musl"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model user {
  uid        Int          @id @default(autoincrement())
  username   String       @unique
  password   String
  skills     skills[]
  contact    contact[]
  About      About[]
  project    project[]
  experience experience[]
  education  education[]
  hero       hero[]

  @@map("User")
}

model hero {
  hid     Int    @id @default(autoincrement())
  uid     Int
  style   String
  hero    String
  subhero String
  user    user   @relation(fields: [uid], references: [uid])
}

model project {
  pid    Int      @id @default(autoincrement())
  uid    Int
  title  String
  image  String
  desc   String
  tags   String[]
  github String
  Link   String
  style  String
  user   user     @relation(fields: [uid], references: [uid])
}

model experience {
  exid      Int      @id @default(autoincrement())
  title     String
  corp      String
  style     String
  startdate DateTime
  enddate   DateTime
  desc      String
  uid       Int
  user      user     @relation(fields: [uid], references: [uid])
}

model education {
  edid      Int      @id @default(autoincrement())
  inst      String
  degree    String
  startdate DateTime
  enddate   DateTime
  style     String
  uid       Int
  user      user     @relation(fields: [uid], references: [uid])
}

model skills {
  sid       Int      @id @default(autoincrement())
  uid       Int
  frontend  String[]
  style     String
  backend   String[]
  database  String[]
  mobile    String[]
  other     String[]
  languages String[]
  user      user     @relation(fields: [uid], references: [uid])
}

model contact {
  cid      Int    @id @default(autoincrement())
  uid      Int
  email    String
  phone    String
  location String
  linkedin String
  user     user   @relation(fields: [uid], references: [uid])
}

model About {
  aid   Int    @id @default(autoincrement())
  uid   Int
  image String
  about String
  style String
  user  user   @relation(fields: [uid], references: [uid])
}
